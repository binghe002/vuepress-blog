(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{387:function(t,s,a){"use strict";a.r(s);var n=a(22),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"前端面试题-1-2-3-map-parseint-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端面试题-1-2-3-map-parseint-返回值"}},[t._v("#")]),t._v(" 前端面试题-['1','2','3'].map(parseInt)返回值")]),t._v(" "),a("ClientOnly",[a("title-pv")],1),t._v(" "),a("ul",[a("li",[t._v("['1','2','3'].map(parseInt)的返回值是什么？")])]),t._v(" "),a("p",[t._v("答案：[1,NaN,NaN]")]),t._v(" "),a("ul",[a("li",[t._v("parseInt方法")])]),t._v(" "),a("p",[t._v("定义和用法")]),t._v(" "),a("p",[t._v("parseInt() 函数可解析一个字符串，并返回一个整数。")]),t._v(" "),a("p",[t._v("parseInt(string, radix)")]),t._v(" "),a("p",[t._v("string:要被解析的字符串")]),t._v(" "),a("p",[t._v("radix:\n可选。表示要解析的数字的基数。该值介于 2 ~ 36 之间。如果省略该参数或其值为 0，则数字将以 10 为基础（进制数）来解析。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。如果该参数小于 2 或者大于 36，则\nparseInt() 将返回 NaN。")]),t._v(" "),a("ul",[a("li",[t._v("例：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10 radinx为0时按十进制处理")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN 最小是二进制")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2 10以二进制为基数，结果2")]),t._v("\n\n")])])]),a("ul",[a("li",[a("p",[t._v("map方法")])]),t._v(" "),a("li",[a("p",[t._v("map方法的使用")])])]),t._v(" "),a("p",[t._v("map方法返回一个新数组，数组中的元素为原始数组元素处理后的值")]),t._v(" "),a("p",[t._v("array.map(function(currentValue,index,arr), thisValue)")]),t._v(" "),a("p",[t._v("数组的参数有三个，第一个参数代表当前被处理的元素，第二个参数代表该元素的索引，第三个参数代表当前元素属于的数组对象")]),t._v(" "),a("ul",[a("li",[t._v("解题")])]),t._v(" "),a("p",[t._v("知道了以上两个方法，那我们看一下解析过程")]),t._v(" "),a("p",[t._v("['1','2','3'].map(parseInt) 就是将字符串  '1','2','3'作为元素，0,1,2下标，分别调用 parseInt函数")]),t._v(" "),a("p",[t._v("也就是")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//基数为0 会根据十进制解析，所以结果为1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2,'")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//基数为 1 不在区间范围，所以结果为NaN")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ParseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3,'")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//基数为2 用二进制来解析，二进制以应该为0，1组成,<2才可以，无法解析，所以结果为NaN")]),t._v("\n\n")])])]),a("ClientOnly",[a("leave")],1)],1)}),[],!1,null,null,null);s.default=e.exports}}]);