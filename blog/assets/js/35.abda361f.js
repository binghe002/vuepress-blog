(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{389:function(t,a,s){"use strict";s.r(a);var n=s(22),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"前端面试题-高频问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端面试题-高频问题"}},[t._v("#")]),t._v(" 前端面试题-高频问题")]),t._v(" "),s("ClientOnly",[s("title-pv")],1),t._v(" "),s("h2",{attrs:{id:"你做的页面在哪些流览器测试过-这些浏览器的内核分别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你做的页面在哪些流览器测试过-这些浏览器的内核分别是什么"}},[t._v("#")]),t._v(" 你做的页面在哪些流览器测试过？这些浏览器的内核分别是什么?")]),t._v(" "),s("p",[t._v("IE: trident  内核"),s("br"),t._v("\nFirefox：gecko  内核"),s("br"),t._v("\nSafari:webkit  内核"),s("br"),t._v("\nOpera:以前是 presto 内核，Opera 现已改用 Google Chrome 的 Blink  内核"),s("br"),t._v("\nChrome:Blink(基于 webkit，Google 与 Opera Software 共同开发)")]),t._v(" "),s("h2",{attrs:{id:"每个-html文件里开头都有个很重要的东西-doctype-知道这是干什么的吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#每个-html文件里开头都有个很重要的东西-doctype-知道这是干什么的吗"}},[t._v("#")]),t._v(" 每个 HTML文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？")]),t._v(" "),s("p",[s("code",[t._v("<!DOCTYPE>")]),t._v("声明位于文档中的最前面的位置，处于 "),s("code",[t._v("<html>")]),t._v("  标签之前。此标签可告知\n浏览器文档使用哪种 HTML 或 XHTML  规范。（重点：告诉浏览器按照何种规范解析页\n面）")]),t._v(" "),s("h2",{attrs:{id:"quirks-模式是什么-它和-standards-模式有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#quirks-模式是什么-它和-standards-模式有什么区别"}},[t._v("#")]),t._v(" Quirks 模式是什么？它和 Standards  模式有什么区别")]),t._v(" "),s("p",[t._v("从 IE6 开始，引入了 Standards  模式，标准模式中，浏览器尝试给符合标准的文档在规范\n上的正确处理达到在指定浏览器中的程度。\n在 IE6 之前 CSS 还不够成熟，所以 IE5 等之前的浏览器对 CSS 的支持很差， IE6  将对\nCSS  提供更好的支持，然而这时的问题就来了，因为有很多页面是基于旧的布局方式写\n的，而如果 IE6 支持 CSS  则将令这些页面显示不正常，如何在即保证不破坏现有页面，又\n提供新的渲染机制呢？\n在写程序时我们也会经常遇到这样的问题，如何保证原来的接口不变，又提供更强大的功\n能，尤其是新功能不兼容旧功能时。遇到这种问题时的一个常见做法是增加参数和分支，\n即当某个参数为真时，我们就使用新功能，而如果这个参数 不为真时，就使用旧功能，这\n样就能不破坏原有的程序，又提供新功能。IE6 也是类似这样做的，它将 DTD  当成了这个\n“参数”，因为以前的页面大家都不会去写 DTD，所以 IE6 就假定 如果写了 DTD，就意\n味着这个页面将采用对 CSS  支持更好的布局，而如果没有，则采用兼容之前的布局方式。\n这就是 Quirks  模式（怪癖模式，诡异模式，怪异模式）。\n总体会有布局、样式解析和脚本执行三个方面的区别。\n盒模型：在 W3C  标准中，如果设置一个元素的宽度和高度，指的是元素内容的宽度和高\n度，而在 Quirks 模式下，IE 的宽度和高度还包含了 padding 和 border。\n设置行内元素的高宽：在 Standards 模式下，给"),s("code",[t._v("<span>")]),t._v("等行内元素设置 wdith  和\nheight 都不会生效，而在 quirks  模式下，则会生效。\n设置百分比的高度：在 standards  模式下，一个元素的高度是由其包含的内容来决定的，\n如果父元素没有设置百分比的高度，子元素设置一个百分比的高度是无效的用\nmargin:0 auto 设置水平居中：使用 margin:0 auto 在 standards  模式下可以使元素水平\n居中，但在 quirks  模式下却会失效。\n（还有很多，答出什么不重要，关键是看他答出的这些是不是自己经验遇到的，还是说都\n是看文章看的，甚至完全不知道。）")]),t._v(" "),s("h2",{attrs:{id:"div-css-的布局较-table-布局有什么优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#div-css-的布局较-table-布局有什么优点"}},[t._v("#")]),t._v(" div+css 的布局较 table 布局有什么优点？")]),t._v(" "),s("p",[t._v("改版的时候更方便 只要改 css  文件。\n页面加载速度更快、结构化清晰、页面显示简洁。\n表现与结构相分离。\n易于优化（seo）搜索引擎更友好，排名更容易靠前。")]),t._v(" "),s("h2",{attrs:{id:"img-的-alt与title有何异同-strong-与-em-的异同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#img-的-alt与title有何异同-strong-与-em-的异同"}},[t._v("#")]),t._v(" img 的 alt与title有何异同？strong 与 em 的异同？")]),t._v(" "),s("p",[t._v("a:alt(alt text):为不能显示图像、窗体或 applets 的用户代理（UA），alt  属性用来指定替\n换文字。替换文字的语言由 lang 属性指定。(在 IE 浏览器下会在没有 title 时把 alt  当\n成 tool tip 显示)\ntitle(tool tip):该属性为设置该属性的元素提供建议性的信息。\nstrong:粗体强调标签，强调，表示内容的重要性\nem:斜体强调标签，更强烈强调，表示内容的强调点")]),t._v(" "),s("h2",{attrs:{id:"你能描述一下渐进增强和优雅降级之间的不同吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你能描述一下渐进增强和优雅降级之间的不同吗"}},[t._v("#")]),t._v(" 你能描述一下渐进增强和优雅降级之间的不同吗?")]),t._v(" "),s("p",[t._v("渐进增强 progressive enhancement：针对低版本浏览器进行构建页面，保证最基本的\n功能，然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。\n优雅降级 graceful degradation：一开始就构建完整的功能，然后再针对低版本浏览器进\n行兼容。\n区别：优雅降级是从复杂的现状开始，并试图减少用户体验的供给，而渐进增强则是从一\n个非常基础的，能够起作用的版本开始，并不断扩充，以适应未来环境的需要。降级（功\n能衰减）意味着往回看；而渐进增强则意味着朝前看，同时保证其根基处于安全地带。\n“优雅降级”观点\n“优雅降级”观点认为应该针对那些最高级、最完善的浏览器来设计网站。而将那些被认\n为“过时”或有功能缺失的浏览器下的测试工作安排在开发周期的最后阶段，并把测试对\n象限定为主流浏览器（如 IE、Mozilla  等）的前一个版本。\n在这种设计范例下，旧版的浏览器被认为仅能提供“简陋却无\n妨 (poor, but passable)” 的浏览体验。你可以做一些小的调整来适应某个特定的浏览\n器。但由于它们并非我们所关注的焦点，因此除了修复较大的错误之外，其它的差异将被\n直接忽略。\n“渐进增强”观点\n“渐进增强”观点则认为应关注于内容本身。\n内容是我们建立网站的诱因。有的网站展示它，有的则收集它，有的寻求，有的操作，还\n有的网站甚至会包含以上的种种，但相同点是它们全都涉及到内容。这使得“渐进增强”\n成为一种更为合理的设计范例。这也是它立即被 Yahoo!  所采纳并用以构建其“分级式浏\n览器支持 (Graded Browser  Support)”策略的原因所在。\n那么问题来了。现在产品经理看到 IE6,7,8  网页效果相对高版本现代浏览器少了很多圆\n角，阴影（CSS3），要求兼容（使用图片背景，放弃 CSS3），你会如何说服他？")]),t._v(" "),s("h2",{attrs:{id:"为什么利用多个域名来存储网站资源会更有效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么利用多个域名来存储网站资源会更有效"}},[t._v("#")]),t._v(" 为什么利用多个域名来存储网站资源会更有效？")]),t._v(" "),s("p",[t._v("CDN  缓存更方便\n突破浏览器并发限制\n节约 cookie  带宽\n节约主域名的连接数，优化页面响应速度\n防止不必要的安全问题")]),t._v(" "),s("h2",{attrs:{id:"请谈一下你对网页标准和标准制定机构重要性的理解。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请谈一下你对网页标准和标准制定机构重要性的理解。"}},[t._v("#")]),t._v(" 请谈一下你对网页标准和标准制定机构重要性的理解。")]),t._v(" "),s("p",[t._v("网页标准和标准制定机构都是为了能让 web  发展的更‘健康’，开发者遵循统一的标准，\n降低开发难度，开发成本，SEO 也会更好做，也不会因为滥用代码导致各种 BUG、安全\n问题，最终提高网站易用性。")]),t._v(" "),s("h2",{attrs:{id:"请描述一下cookies-sessionstorage和localstorage-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请描述一下cookies-sessionstorage和localstorage-的区别"}},[t._v("#")]),t._v(" 请描述一下cookies，sessionStorage和localStorage 的区别？")]),t._v(" "),s("p",[t._v("sessionStorage 用于本地存储一个会话（session）中的数据，这些数据只有在同一个会\n话中的页面才能访问并且当会话结束后数据也随之销毁。因此 sessionStorage  不是一种\n持久化的本地存储，仅仅是会话级别的存储。而 localStorage  用于持久化的本地存储，除\n非主动删除数据，否则数据是永远不会过期的。\nweb storage 和 cookie  的区别\nWeb Storage 的概念和 cookie 相似，区别是它是为了更大容量存储设计的。Cookie  的\n大小是受限的，并且每次你请求一个新的页面的时候 Cookie  都会被发送过去，这样无形\n中浪费了带宽，另外 cookie  还需要指定作用域，不可以跨域调用。\n除此之外，Web Storage 拥有 setItem,getItem,removeItem,clear 等方法，不像  cookie\n需要前端开发者自己封装 setCookie，getCookie。但是 Cookie  也是不可以或缺的：\nCookie 的作用是与服务器进行交互，作为 HTTP 规范的一部分而存在 ，而 Web Storage\n仅仅是为了在本地“存储”数据而生。")]),t._v(" "),s("h2",{attrs:{id:"简述一下-src-与-href的区别。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简述一下-src-与-href的区别。"}},[t._v("#")]),t._v(" 简述一下 src 与 href的区别。")]),t._v(" "),s("p",[t._v("src 用于替换当前元素，href  用于在当前文档和引用资源之间确立联系。\nsrc 是 source  的缩写，指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在\n位置；在请求 src 资源时会将其指向的资源下载并应用到文档内，例如 js 脚本，img  图片\n和 frame  等元素。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'js.js'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执\n行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么\n将 js  脚本放在底部而不是头部。\nhref 是 Hypertext Reference  的缩写，指向网络资源所在位置，建立和当前元素（锚点）\n或当前文档（链接）之间的链接，如果我们在文档中添加")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("link href"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'common.css'")]),t._v(" rel"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stylesheet'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("那么浏览器会识别该文档为 css  文件，就会并行下载资源并且不会停止对当前文档的处\n理。这也是为什么建议使用 link 方式来加载 css，而不是使用@import  方式。")]),t._v(" "),s("h2",{attrs:{id:"知道的网页制作会用到的图片格式有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#知道的网页制作会用到的图片格式有哪些"}},[t._v("#")]),t._v(" 知道的网页制作会用到的图片格式有哪些？")]),t._v(" "),s("p",[t._v("png-8，png-24，jpeg，gif，svg。\n但是上面的那些都不是面试官想要的最后答案。面试官希望听到是 Webp。（是否有关注\n新技术，新鲜事物）\n科普一下 Webp：WebP 格式，谷歌（google）开发的一种旨在加快图片加载速度的图\n片格式。图片压缩体积大约只有 JPEG 的 2/3，并能节省大量的服务器带宽资源和数据空\n间。Facebook Ebay 等知名网站已经开始测试并使用 WebP  格式。\n在质量相同的情况下，WebP 格式图像的体积要比 JPEG 格式图像小  40%")]),t._v(" "),s("h2",{attrs:{id:"知道什么是微格式吗-谈谈理解。在前端构建中应该考虑微格式吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#知道什么是微格式吗-谈谈理解。在前端构建中应该考虑微格式吗"}},[t._v("#")]),t._v(" 知道什么是微格式吗？谈谈理解。在前端构建中应该考虑微格式吗？")]),t._v(" "),s("p",[t._v("微格式（Microformats）是一种让机器可读的语义化 XHTML  词汇的集合，是结构化数据\n的开放标准。是为特殊应用而制定的特殊格式。\n优点：将智能数据添加到网页上，让网站内容在搜索引擎结果界面可以显示额外的提示。\n（应用范例：豆瓣，有兴趣自行 google）")]),t._v(" "),s("h2",{attrs:{id:"在-css-js-代码上线之后开发人员经常会优化性能-从用户刷新网页开"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-css-js-代码上线之后开发人员经常会优化性能-从用户刷新网页开"}},[t._v("#")]),t._v(" 在 css/js  代码上线之后开发人员经常会优化性能，从用户刷新网页开")]),t._v(" "),s("p",[t._v("始，一次 js  请求一般情况下有哪些地方会有缓存处理？\n答案：dns 缓存，cdn  缓存，浏览器缓存，服务器缓存。")]),t._v(" "),s("h2",{attrs:{id:"一个页面上有大量的图片-大型电商网站-加载很慢-你有哪些方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一个页面上有大量的图片-大型电商网站-加载很慢-你有哪些方法"}},[t._v("#")]),t._v(" 一个页面上有大量的图片（大型电商网站），加载很慢，你有哪些方法")]),t._v(" "),s("p",[t._v("优化这些图片的加载，给用户更好的体验。\n图片懒加载，在页面上的未可视区域可以添加一个滚动条事件，判断图片位置与浏览器顶\n端的距离与页面的距离，如果前者小于后者，优先加载。\n如果为幻灯片、相册等，可以使用图片预加载技术，将当前展示图片的前一张和后一张优\n先下载。\n如果图片为 css 图片，可以使用 CSSsprite，SVGsprite，Iconfont、Base64  等技术。\n如果图片过大，可以使用特殊编码的图片，加载时会先加载一张压缩的特别厉害的缩略\n图，以提高用户体验。\n如果图片展示区域小于图片的真实大小，则因在服务器端根据业务需要先行进行图片压\n缩，图片压缩后大小与展示一致。")]),t._v(" "),s("h2",{attrs:{id:"你如何理解-html-结构的语义化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你如何理解-html-结构的语义化"}},[t._v("#")]),t._v(" 你如何理解 HTML 结构的语义化？")]),t._v(" "),s("p",[t._v("去掉或样式丢失的时候能让页面呈现清晰的结构：\nhtml 本身是没有表现的，我们看到例如"),s("code",[t._v("<h1>")]),t._v("是粗体，字体大小 2em，加粗；"),s("code",[t._v("<strong>")]),t._v("\n是加粗的，不要认为这是 html 的表现，这些其实 html 默认的 css  样式在起作用，所以去\n掉或样式丢失的时候能让页面呈现清晰的结构不是语义化的 HTML  结构的优点，但是浏览\n器都有有默认样式，默认样式的目的也是为了更好的表达 html  的语义，可以说浏览器的\n默认样式和语义化的 HTML  结构是不可分割的。\n屏幕阅读器（如果访客有视障）会完全根据你的标记来“读”你的网页.\n例如,如果你使用的含语义的标记,屏幕阅读器就会“逐个拼出”你的单词,而不是试着去对\n它完整发音.\nPDA、手机等设备可能无法像普通电脑的浏览器一样来渲染网页（通常是因为这些设备对\nCSS  的支持较弱）\n使用语义标记可以确保这些设备以一种有意义的方式来渲染网页.理想情况下,观看设备的任\n务是符合设备本身的条件来渲染网页.\n语义标记为设备提供了所需的相关信息,就省去了你自己去考虑所有可能的显示情况（包括\n现有的或者将来新的设备）.例如,一部手机可以选择使一段标记了标题的文字以粗体显示.\n而掌上电脑可能会以比较大的字体来显示.无论哪种方式一旦你对文本标记为标题,您就可以\n确信读取设备将根据其自身的条件来合适地显示页面.\n搜索引擎的爬虫也依赖于标记来确定上下文和各个关键字的权重\n过去你可能还没有考虑搜索引擎的爬虫也是网站的“访客”,但现在它们他们实际上是极其\n宝贵的用户.没有他们的话,搜索引擎将无法索引你的网站,然后一般用户将很难过来访问.\n你的页面是否对爬虫容易理解非常重要,因为爬虫很大程度上会忽略用于表现的标记,而只注\n重语义标记.\n因此,如果页面文件的标题被标记,而不是,那么这个页面在搜索结果的位置可能会比较靠后.\n除了提升易用性外,语义标记有利于正确使用 CSS 和 JavaScript,因为其本身提供了许多\n“钩钩”来应用页面的样式与行为.\nSEO  主要还是靠你网站的内容和外部链接的。\n便于团队开发和维护\nW3C  给我们定了一个很好的标准，在团队中大家都遵循这个标准，可以减少很多差异化的\n东西，方便开发和维护，提高开发效率，甚至实现模块化开发。")]),t._v(" "),s("h2",{attrs:{id:"谈谈以前端角度出发做好-seo-需要考虑什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈谈以前端角度出发做好-seo-需要考虑什么"}},[t._v("#")]),t._v(" 谈谈以前端角度出发做好 SEO 需要考虑什么？")]),t._v(" "),s("p",[t._v("了解搜索引擎如何抓取网页和如何索引网页\n你需要知道一些搜索引擎的基本工作原理，各个搜索引擎之间的区别，搜索机器人\n（SE robot 或叫 web crawler）如何进行工作，搜索引擎如何对搜索结果进行排序等等。\nMeta  标签优化\n主要包括主题（Title)，网站描述(Description)，和关键词（Keywords）。还有一些其它\n的隐藏文字比如 Author（作者），Category（目录），Language（编码语种）等。\n如何选取关键词并在网页中放置关键词\n搜索就得用关键词。关键词分析和选择是 SEO  最重要的工作之一。首先要给网站确定主关\n键词（一般在 5  个上下），然后针对这些关键词进行优化，包括关键词密度\n（Density），相关度（Relavancy），突出性（Prominency）等等。\n了解主要的搜索引擎\n虽然搜索引擎有很多，但是对网站流量起决定作用的就那么几个。比如英文的主要有\nGoogle，Yahoo，Bing  等；中文的有百度，搜狗，有道等。不同的搜索引擎对页面的抓\n取和索引、排序的规则都不一样。还要了解各搜索门户和搜索引擎之间的关系，比如  AOL\n网页搜索用的是 Google 的搜索技术，MSN 用的是 Bing  的技术。\n主要的互联网目录\nOpen Directory  自身不是搜索引擎，而是一个大型的网站目录，他和搜索引擎的主要区\n别是网站内容的收集方式不同。目录是人工编辑的，主要收录网站主页；搜索引擎是自动\n收集的，除了主页外还抓取大量的内容页面。\n按点击付费的搜索引擎\n搜索引擎也需要生存，随着互联网商务的越来越成熟，收费的搜索引擎也开始大行其道。\n最典型的有 Overture 和百度，当然也包括 Google 的广告项目 Google Adwords。越来\n越多的人通过搜索引擎的点击广告来定位商业网站，这里面也大有优化和排名的学问，你\n得学会用最少的广告投入获得最多的点击。\n搜索引擎登录\n网站做完了以后，别躺在那里等着客人从天而降。要让别人找到你，最简单的办法就是将\n网站提交（submit）到搜索引擎。如果你的是商业网站，主要的搜索引擎和目录都会要求\n你付费来获得收录（比如 Yahoo 要 299  美元），但是好消息是（至少到目前为止）最大\n的搜索引擎 Google 目前还是免费，而且它主宰着 60％以上的搜索市场。\n链接交换和链接广泛度（Link Popularity）\n网页内容都是以超文本（Hypertext）的方式来互相链接的，网站之间也是如此。除了搜\n索引擎以外，人们也每天通过不同网站之间的链接来 Surfing（“冲浪”）。其它网站到\n你的网站的链接越多，你也就会获得更多的访问量。更重要的是，你的网站的外部链接数\n越多，会被搜索引擎认为它的重要性越大，从而给你更高的排名。\n合理的标签使用")]),t._v(" "),s("h2",{attrs:{id:"有哪项方式可以对一个-dom设置它的-css样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有哪项方式可以对一个-dom设置它的-css样式"}},[t._v("#")]),t._v(" 有哪项方式可以对一个 DOM设置它的 CSS样式？")]),t._v(" "),s("p",[t._v("外部样式表，引入一个外部 css  文件\n内部样式表，将 css 代码放在 "),s("code",[t._v("<head>")]),t._v("  标签内部\n内联样式，将 css 样式直接定义在 HTML  元素内部")]),t._v(" "),s("h2",{attrs:{id:"css都有哪些选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css都有哪些选择器"}},[t._v("#")]),t._v(" CSS都有哪些选择器？")]),t._v(" "),s("p",[t._v("派生选择器（用 HTML  标签申明）\nid 选择器（用 DOM 的 ID  申明）\n类选择器（用一个样式类名申明）\n属性选择器（用 DOM 的属性申明，属于 CSS2，IE6  不支持，不常用，不知道就算了）\n除了前 3  种基本选择器，还有一些扩展选择器，包括\n后代选择器（利用空格间隔，比如 div .a{  }）\n群组选择器（利用逗号间隔，比如 p,div,#a{  }）\n那么问题来了，CSS  选择器的优先级是怎么样定义的？\n基本原则：\n一般而言，选择器越特殊，它的优先级越高。也就是选择器指向的越准确，它的优先级就\n越高。\n复杂的计算方法：\n用 1  表示派生选择器的优先级\n用 10  表示类选择器的优先级\n用 100 标示 ID  选择器的优先级\ndiv.test1 .span var 优先级 1+10 +10 +1\nspan#xxx .songs li 优先级 1+100 + 10 + 1\n#xxx li 优先级 100 +1\n那么问题来了，看下列代码，"),s("code",[t._v("<p>")]),t._v("标签内的文字是什么颜色的？")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("<style>\n.classA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("blue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".classB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n</style>\n<body>\n<p class="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'classB classA'")]),t._v("> 123 </p>\n</body>\n")])])]),s("p",[t._v("答案：red。与样式定义在文件中的先后顺序有关，即是后面的覆盖前面的，与在\n"),s("code",[t._v("<pclass='classB classA'>")]),t._v("中的先后关系无关。")]),t._v(" "),s("h2",{attrs:{id:"css-中可以通过哪些属性定义-使得一个-dom-元素不显示在浏览器可视范围内"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-中可以通过哪些属性定义-使得一个-dom-元素不显示在浏览器可视范围内"}},[t._v("#")]),t._v(" CSS 中可以通过哪些属性定义，使得一个 DOM 元素不显示在浏览器可视范围内？")]),t._v(" "),s("p",[t._v("最基本的：\n设置 display 属性为 none，或者设置 visibility 属性为  hidden\n技巧性：\n设置宽高为 0，设置透明度为 0，设置 z-index 位置在-1000em")]),t._v(" "),s("h2",{attrs:{id:"超链接访问过后-hover-样式就不出现的问题是什么-如何解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#超链接访问过后-hover-样式就不出现的问题是什么-如何解决"}},[t._v("#")]),t._v(" 超链接访问过后 hover 样式就不出现的问题是什么？如何解决？")]),t._v(" "),s("p",[t._v("答案：被点击访问过的超链接样式不在具有 hover 和 active 了,解决方法是改变 CSS  属性\n的排列顺序: L-V-H-A（link,visited,hover,active）")]),t._v(" "),s("h2",{attrs:{id:"什么是-css-hack-ie6-7-8-的-hack-分别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-css-hack-ie6-7-8-的-hack-分别是什么"}},[t._v("#")]),t._v(" 什么是 Css Hack？ie6,7,8 的 hack 分别是什么？")]),t._v(" "),s("p",[t._v("答案：针对不同的浏览器写不同的 CSS code 的过程，就是 CSS hack。\n示例如下：")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("300px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("300px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("blue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red\\9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("yellow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("pink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("_background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("orange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*firefox*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*all ie*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*ie8*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*ie7*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*ie6*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(":root #test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("purple\\9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*ie9*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token atrule"}},[s("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@media")]),t._v(" all "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("min-width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("black"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*opera*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token atrule"}},[s("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@media")]),t._v(" screen "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-min-device-pixel-ratio")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("gray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*chrome and safari*/")]),t._v("\n")])])]),s("h2",{attrs:{id:"行内元素和块级元素的具体区别是什么-行内元素的padding和margin可设置吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行内元素和块级元素的具体区别是什么-行内元素的padding和margin可设置吗"}},[t._v("#")]),t._v(" 行内元素和块级元素的具体区别是什么？行内元素的padding和margin可设置吗？")]),t._v(" "),s("p",[t._v("块级元素(block)特性：\n总是独占一行，表现为另起一行开始，而且其后的元素也必须另起一行显示;\n宽度(width)、高度(height)、内边距(padding)和外边距(margin)都可控制;\n内联元素(inline)特性：\n和相邻的内联元素在同一行;\n宽度(width)、高度(height)、内边距的 top/bottom(padding-top/padding-bottom)和\n外边距的 top/bottom(margin-top/margin-bottom)都不可改变（也就是 padding  和\nmargin 的 left 和 right  是可以设置的），就是里面文字或图片的大小。\n那么问题来了，浏览器还有默认的天生 inline-block  元素（拥有内在尺寸，可设置高宽，\n但不会自动换行），有哪些？\n答案："),s("code",[t._v("<input> 、<img> 、<button> 、<texterea> 、<label>")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"什么是外边距重叠-重叠的结果是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是外边距重叠-重叠的结果是什么"}},[t._v("#")]),t._v(" 什么是外边距重叠？重叠的结果是什么？")]),t._v(" "),s("p",[t._v("外边距重叠就是 margin-collapse。\n在 CSS  当中，相邻的两个盒子（可能是兄弟关系也可能是祖先关系）的外边距可以结合成\n一个单独的外边距。这种合并外边距的方式被称为折叠，并且因而所结合成的外边距称为\n折叠外边距。\n折叠结果遵循下列计算规则：\n两个相邻的外边距都是正数时，折叠结果是它们两者之间较大的值。\n两个相邻的外边距都是负数时，折叠结果是两者绝对值的较大值。\n两个外边距一正一负时，折叠结果是两者的相加的和。")]),t._v(" "),s("h2",{attrs:{id:"rgba-和-opacity-的透明效果有什么不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rgba-和-opacity-的透明效果有什么不同"}},[t._v("#")]),t._v(" rgba()和 opacity  的透明效果有什么不同？")]),t._v(" "),s("p",[t._v("rgba()和 opacity 都能实现透明效果，但最大的不同是 opacity  作用于元素，以及元素内\n的所有内容的透明度，\n而 rgba()只作用于元素的颜色或其背景色。（设置 rgba  透明的元素的子元素不会继承透\n明效果！）")]),t._v(" "),s("h2",{attrs:{id:"css-中可以让文字在垂直和水平方向上重叠的两个属性是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-中可以让文字在垂直和水平方向上重叠的两个属性是什么"}},[t._v("#")]),t._v(" css  中可以让文字在垂直和水平方向上重叠的两个属性是什么？")]),t._v(" "),s("p",[t._v("垂直方向：line-height\n水平方向：letter-spacing\n那么问题来了，关于 letter-spacing  的妙用知道有哪些么？\n答案:可以用于消除 inline-block  元素间的换行符空格间隙问题。")]),t._v(" "),s("h2",{attrs:{id:"如何垂直居中一个浮动元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何垂直居中一个浮动元素"}},[t._v("#")]),t._v(" 如何垂直居中一个浮动元素？")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("//方法一：已知元素的高宽\n#div1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#6699FF"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n//父元素需要相对定位\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("-100px "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   //二分之一的 height，width\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" -100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("//方法二:未知元素的高宽\n#div1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #6699FF"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n//父元素需要相对定位\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("right")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("bottom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("那么问题来了，如何垂直居中一个<img>?（用更简便的方法。")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#container")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n//<img>的容器设置如下\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("table-cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-align")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("center"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("vertical-align")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("middle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"px-和-em-的区别。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#px-和-em-的区别。"}},[t._v("#")]),t._v(" px 和 em 的区别。")]),t._v(" "),s("p",[t._v("px 和 em 都是长度单位，区别是，px  的值是固定的，指定是多少就是多少，计算比较容\n易。em 得值不是固定的，并且 em  会继承父级元素的字体大小。\n浏览器的默认字体高都是 16px。所以未经调整的浏览器都符合: 1em=16px。那么12px=0.75em, 10px=0.625em。")]),t._v(" "),s("h2",{attrs:{id:"描述一个-reset-的-css-文件并如何使用它。知道-normalize-css吗-你了解他们的不同之处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#描述一个-reset-的-css-文件并如何使用它。知道-normalize-css吗-你了解他们的不同之处"}},[t._v("#")]),t._v(" 描述一个”reset”的 CSS 文件并如何使用它。知道  normalize.css吗？你了解他们的不同之处？")]),t._v(" "),s("p",[t._v("重置样式非常多，凡是一个前端开发人员肯定有一个常用的重置 CSS  文件并知道如何使用\n它们。他们是盲目的在做还是知道为什么这么做呢？原因是不同的浏览器对一些元素有不\n同的默认样式，如果你不处理，在不同的浏览器下会存在必要的风险，或者更有戏剧性的\n性发生。\n你可能会用 Normalize  来代替你的重置样式文件。它没有重置所有的样式风格，但仅提供\n了一套合理的默认样式值。既能让众多浏览器达到一致和合理，但又不扰乱其他的东西\n（如粗体的标题）。\n在这一方面，无法做每一个复位重置。它也确实有些超过一个重置，它处理了你永远都不\n用考虑的怪癖，像 HTML 的 audio 元素不一致或 line-height  不一致。")]),t._v(" "),s("h2",{attrs:{id:"sass、less-是什么-大家为什么要使用他们"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sass、less-是什么-大家为什么要使用他们"}},[t._v("#")]),t._v(" Sass、LESS  是什么？大家为什么要使用他们？")]),t._v(" "),s("p",[t._v("他们是 CSS 预处理器。他是 CSS 上的一种抽象层。他们是一种特殊的语法/语言编译成\nCSS。\n例如 Less 是一种动态样式语言. 将 CSS  赋予了动态语言的特性，如变量，继承，运算，\n函数. LESS 既可以在客户端上运行 (支持 IE 6+, Webkit, Firefox)，也可一在服务端运行\n(借助 Node.js)。\n为什么要使用它们？\n结构清晰，便于扩展。\n可以方便地屏蔽浏览器私有语法差异。这个不用多说，封装对浏览器语法差异的重复处\n理，减少无意义的机械劳动。\n可以轻松实现多重继承。\n完全兼容 CSS 代码，可以方便地应用到老项目中。LESS 只是在 CSS  语法上做了扩展，所\n以老的 CSS 代码也可以与 LESS  代码一同编译。")]),t._v(" "),s("h2",{attrs:{id:"display-none-与-visibility-hidden-的区别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#display-none-与-visibility-hidden-的区别是什么"}},[t._v("#")]),t._v(" display:none 与 visibility:hidden  的区别是什么？")]),t._v(" "),s("p",[t._v("display :  隐藏对应的元素但不挤占该元素原来的空间。\nvisibility:  隐藏对应的元素并且挤占该元素原来的空间。\n即是，使用 CSS display:none 属性后，HTML  元素（对象）的宽度、高度等各种属性值\n都将“丢失”;而使用 visibility:hidden 属性后，HTML  元素（对象）仅仅是在视觉上看不\n见（完全透明），而它所占据的空间位置仍然存在。")]),t._v(" "),s("h2",{attrs:{id:"css-中-link-和-import-的区别是"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-中-link-和-import-的区别是"}},[t._v("#")]),t._v(" CSS 中 link 和@import  的区别是：")]),t._v(" "),s("p",[t._v("Link 属于 html 标签，而@import 是 CSS  中提供的\n在页面加载的时候，link 会同时被加载，而@import 引用的 CSS  会在页面加载完成后才\n会加载引用的  CSS\n@import 只有在 ie5 以上才可以被识别，而 link 是 html  标签，不存在浏览器兼容性问题\nLink 引入样式的权重大于@import 的引用（@import  是将引用的样式导入到当前的页面\n中）")]),t._v(" "),s("h2",{attrs:{id:"简介盒子模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介盒子模型"}},[t._v("#")]),t._v(" 简介盒子模型：")]),t._v(" "),s("p",[t._v("CSS 的盒子模型有两种：IE 盒子模型、标准的 W3C  盒子模型模型\n盒模型：内容、内边距、外边距（一般不计入盒子实际宽度）、边框")]),t._v(" "),s("h2",{attrs:{id:"为什么要初始化样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要初始化样式"}},[t._v("#")]),t._v(" 为什么要初始化样式？")]),t._v(" "),s("p",[t._v("由于浏览器兼容的问题，不同的浏览器对标签的默认样式值不同，若不初始化会造成不同\n浏览器之间的显示差异\n但是初始化 CSS  会对搜索引擎优化造成小影响")]),t._v(" "),s("h2",{attrs:{id:"bfc-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bfc-是什么"}},[t._v("#")]),t._v(" BFC 是什么?")]),t._v(" "),s("p",[t._v("BFC（块级格式化上下文），一个创建了新的 BFC  的盒子是独立布局的，盒子内元素的布\n局不会影响盒子外面的元素。在同一个 BFC 中的两个相邻的盒子在垂直方向发生  margin\n重叠的问题\nBFC  是指浏览器中创建了一个独立的渲染区域，该区域内所有元素的布局不会影响到区域\n外元素的布局，这个渲染区域只对块级元素起作用")]),t._v(" "),s("h2",{attrs:{id:"html-语义化是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html-语义化是什么"}},[t._v("#")]),t._v(" html  语义化是什么？")]),t._v(" "),s("p",[t._v("当页面样式加载失败的时候能够让页面呈现出清晰的结构\n有利于 seo  优化，利于被搜索引擎收录（更便于搜索引擎的爬虫程序来识别）\n便于项目的开发及维护，使 html  代码更具有可读性，便于其他设备解析。")]),t._v(" "),s("h2",{attrs:{id:"doctype-的作用-严格模式与混杂模式的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#doctype-的作用-严格模式与混杂模式的区别"}},[t._v("#")]),t._v(" Doctype  的作用？严格模式与混杂模式的区别？")]),t._v("\n<!DOCTYPE>用于告知浏览器该以何种模式来渲染文档\n"),s("p",[t._v("严格模式下：页面排版及 JS  解析是以该浏览器支持的最高标准来执行\n混杂模式：不严格按照标准执行，主要用来兼容旧的浏览器，向后兼容")]),t._v(" "),s("h2",{attrs:{id:"ie-的双边距-bug-块级元素-float-后设置横向-margin-ie6-显示的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ie-的双边距-bug-块级元素-float-后设置横向-margin-ie6-显示的"}},[t._v("#")]),t._v(" IE 的双边距 BUG：块级元素  float 后设置横向  margin，ie6  显示的")]),t._v(" "),s("p",[t._v("margin  比设置的较大。\n解决：加入_display：inline")]),t._v(" "),s("h2",{attrs:{id:"html-与-xhtml-二者有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html-与-xhtml-二者有什么区别"}},[t._v("#")]),t._v(" HTML 与 XHTML——二者有什么区别？")]),t._v(" "),s("ol",[s("li",[t._v("所有的标记都必须要有一个相应的结束标记")]),t._v(" "),s("li",[t._v("所有标签的元素和属性的名字都必须使用小写")]),t._v(" "),s("li",[t._v("所有的 XML  标记都必须合理嵌套")]),t._v(" "),s("li",[t._v('所有的属性必须用引号 ""  括起来')]),t._v(" "),s("li",[t._v("把所有 < 和 &  特殊符号用编码表示")]),t._v(" "),s("li",[t._v("给所有属性赋一个值")]),t._v(" "),s("li",[t._v('不要在注释内容中使用  "--"')]),t._v(" "),s("li",[t._v("图片必须有说明文字")])]),t._v(" "),s("h2",{attrs:{id:"html-常见兼容性问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html-常见兼容性问题"}},[t._v("#")]),t._v(" html  常见兼容性问题？")]),t._v(" "),s("p",[t._v("1.双边距 BUG float 引起的  使用  display\n2.3 像素问题 使用 float 引起的 使用 dislpay:inline -3px\n3.超链接 hover 点击后失效  使用正确的书写顺序 link visited hover active\n4.Ie z-index 问题 给父级添加  position:relative\n5.Png 透明 使用 js 代码 改\n6.Min-height 最小高度 ！Important  解决’\n7.select 在 ie6 下遮盖 使用 iframe  嵌套")]),t._v(" "),s("h2",{attrs:{id:"为-什-么-没-有-办-法-定-义-1px-左-右-的-宽-度-容-器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为-什-么-没-有-办-法-定-义-1px-左-右-的-宽-度-容-器"}},[t._v("#")]),t._v(" 为 什 么 没 有 办 法 定 义  1px  左 右 的 宽 度 容 器")]),t._v(" "),s("p",[t._v("IE6  默 认 的 行 高 造 成 的 ，使 用over:hidden,zoom:0.08 line-height:1px")]),t._v(" "),s("h2",{attrs:{id:"ie5-8-不支持-opacity-解决办法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ie5-8-不支持-opacity-解决办法"}},[t._v("#")]),t._v(" IE5-8 不支持 opacity，解决办法：")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".opacity")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0.4\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alpha")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("opacity=60"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* for IE5-7 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("-ms-filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* for IE 8*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"ie6-不支持-png-透明背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ie6-不支持-png-透明背景"}},[t._v("#")]),t._v(" IE6 不支持 PNG 透明背景，")]),t._v(" "),s("p",[t._v("解决办法: IE6 下使用 gif  图片")]),t._v(" "),s("h2",{attrs:{id:"对-web-标准以及-w3c-的理解与认识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对-web-标准以及-w3c-的理解与认识"}},[t._v("#")]),t._v(" 对 WEB 标准以及 W3C  的理解与认识")]),t._v(" "),s("p",[t._v("答：标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外  链 css  和 js  脚\n本、结构行为表现的分离、文件下载与页面速度更快、内容能被更多的用户所访问、内容\n能被更广泛的设备所访问、更少的代码和组件，容易维  护、改版方便，不需要变动页面内\n容、提供打印版本而不需要复制内容、提高网站易用性。")]),t._v(" "),s("h2",{attrs:{id:"前端页面有哪三层构成-分别是什么-作用是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端页面有哪三层构成-分别是什么-作用是什么"}},[t._v("#")]),t._v(" 前端页面有哪三层构成，分别是什么?作用是什么?")]),t._v(" "),s("p",[t._v("答：结构层 Html 表示层 CSS 行为层 js。")]),t._v(" "),s("h2",{attrs:{id:"doctype-作用-严格模式与混杂模式-如何触发这两种模式-区分它们有何意义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#doctype-作用-严格模式与混杂模式-如何触发这两种模式-区分它们有何意义"}},[t._v("#")]),t._v(" Doctype 作用?  严格模式与混杂模式-如何触发这两种模式，区分它们有何意义?")]),t._v(" "),s("p",[t._v("（1）、<!DOCTYPE> 声明位于文档中的最前面，处于 "),s("code",[t._v("<html>")]),t._v(" 标签之前。告知浏览器的解析器，用什么文档类型 规范来解析这个文档。\n（2）、严格模式的排版和 JS 运作模式是  以该浏览器支持的最高标准运行。\n（3）、在混杂模式中，页面以宽松的向后兼容的方式显示。模拟老式浏览器的行为以防止站点无法工作。\n（4）、DOCTYPE  不存在或格式不正确会导致文档以混杂模式呈现。")]),t._v(" "),s("h2",{attrs:{id:"行内元素有哪些-块级元素有哪些-空-void-元素有那些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行内元素有哪些-块级元素有哪些-空-void-元素有那些"}},[t._v("#")]),t._v(" 行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？")]),t._v(" "),s("p",[t._v("（1）CSS 规范规定，每个元素都有 display  属性，确定该元素的类型，每个元素都有默认\n的 display 值，比如 div 默认 display 属性值为“block”，成为“块级”元素；span  默认\ndisplay  属性值为“inline”，是“行内”元素。\n（2）行内元素有："),s("code",[t._v("a b span img input select strong")]),t._v("（强调的语气）  块级元素有："),s("code",[t._v("div ul ol li dl dt dd h1 h2 h3 h4…p")]),t._v("\n（3）知名的空元素"),s("code",[t._v("<br><hr><img><input><link><meta>")]),t._v("鲜为人知的是："),s("code",[t._v("<area><base><col><command><embed><keygen><param><source><track><wbr>")])]),t._v(" "),s("h2",{attrs:{id:"css-的盒子模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-的盒子模型"}},[t._v("#")]),t._v(" CSS  的盒子模型？")]),t._v(" "),s("p",[t._v("（1）两种， IE  盒子模型、标准 W3C  盒子模型；IE 的  content  部分包含了 border   和\npading;\n（2）盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border).")]),t._v(" "),s("h2",{attrs:{id:"css-选择符有哪些-哪些属性可以继承-优先级算法如何计算-css3新增伪类有那些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-选择符有哪些-哪些属性可以继承-优先级算法如何计算-css3新增伪类有那些"}},[t._v("#")]),t._v(" CSS 选择符有哪些？哪些属性可以继承？优先级算法如何计算？  CSS3新增伪类有那些？")]),t._v(" "),s("p",[t._v('1.id 选择器（ # myid）\n2.类选择器（.myclassname）\n3.标签选择器（div, h1, p）\n4.相邻选择器（h1 + p）\n5.子选择器（ul < li）\n6.后代选择器（li a）\n7.通配符选择器（ *  ）\n8.属性选择器（a[rel = "external"]）\n9.伪类选择器（a: hover, li: nth - child）\n可继承： font-size font-family color, UL LI DL DD DT;\n不可继承 ：border padding margin width height ;\n优先级就近原则，样式定义最近者为准;\n载入样式以最后载入的定位为准;\n优先级为:\n!important >  id > class > tag\nimportant 比 内联优先级高\nCSS3  新增伪类举例：\np:first-of-type 选择属于其父元素的首个 '),s("code",[t._v("<p>")]),t._v(" 元素的每个 "),s("code",[t._v("<p>")]),t._v(" 元素。\np:last-of-type  选择属于其父元素的最后 "),s("code",[t._v("<p>")]),t._v(" 元素的每个 "),s("code",[t._v("<p>")]),t._v(" 元素。\np:only-of-type  选择属于其父元素唯一的 "),s("code",[t._v("<p>")]),t._v(" 元素的每个 "),s("code",[t._v("<p>")]),t._v(" 元素。\np:only-child\n选择属于其父元素的唯一子元素的每个 "),s("code",[t._v("<p>")]),t._v(" 元素。\np:nth-child(2)  选择属于其父元素的第二个子元素的每个 "),s("code",[t._v("<p>")]),t._v("元素。\n:enabled、:disabled  控制表单控件的禁用状态。\n:checked，单选框或复选框被选中。")]),t._v(" "),s("h2",{attrs:{id:"如何居中-div-如何居中一个浮动元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何居中-div-如何居中一个浮动元素"}},[t._v("#")]),t._v(" 如何居中 div,如何居中一个浮动元素?")]),t._v(" "),s("p",[t._v("给 div 设置一个宽度，然后添加 margin:0 auto  属性")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0 auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("居中一个浮动元素,确定容器的宽高 宽 500 高 300  的层\n设置层的外边距")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("Width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("500px "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("300px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("//高度可以不设\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("Margin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" -150px 0 0 -250px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("relative"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("相对定位\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("pink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("//方便看效果\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("50%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("50%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"浏览器的内核分别是什么-经常遇到的浏览器的兼容性有哪些原因-解决方法是什么-常用-hack-的技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的内核分别是什么-经常遇到的浏览器的兼容性有哪些原因-解决方法是什么-常用-hack-的技巧"}},[t._v("#")]),t._v(" 浏览器的内核分别是什么 ?经常遇到的浏览器的兼容性有哪些原因，解决方法是什么，常用 hack 的技巧 ？")]),t._v(" "),s("p",[t._v("IE  浏览器的内核  Trident、 Mozilla  的  Gecko、google  的 WebKit、Opera  内核Presto；\npng24 为的图片在 iE6 浏览器上出现背景，解决方案是做成  PNG8.\n浏  览 器 默 认 的  margin   和   padding   不 同 。 解 决 方 案 是 加 一 个 全 局 的\n"),s("code",[t._v("*{margin:0;padding:0;}")]),t._v("来统一。\nIE6 双边距 bug:块属性标签 float 后，又有横行的 margin 情况下，在 ie6 显示  margin\n比设置的大。\n浮动 ie 产生的双倍距离 #box{ float:left; width:10px; margin:0 0 0 100px;}\n这种情况之下 IE 会产生 20px 的距离，解决方案是在 float 的标签样式控制中加入 ——\n_display:inline;将其转化为行内属性。(_这个符号只有 ie6 会识别)\n渐进识别的方式，从总体中逐渐排除局部。\n首先，巧妙的使用“\\9”这一标记，将 IE  游览器从所有情况中分离出来。\n接着，再次使用“+”将 IE8 和 IE7、IE6 分离开来，这样 IE8  已经独立识别。"),s("br"),t._v("\ncss")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".bb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#f1ee18"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*所有识别*/")]),t._v("\n."),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#00deff\\9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*IE6、7、8 识别*/")]),t._v("\n+"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#a200ff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*IE6、7 识别*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("_background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#1e0bd1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*IE6 识别*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("IE 下,可以使用获取常规属性的方法来获取自定义属性,\n也可以使用 getAttribute()获取自定义属性;\nFirefox 下,只能使用 getAttribute()获取自定义属性.\n解决方法:统一通过 getAttribute()获取自定义属性.\nIE 下,even 对象有 x,y 属性,但是没有 pageX,pageY 属性;\nFirefox 下,event 对象有 pageX,pageY 属性,但是没有 x,y 属性.\n（条件注释）缺点是在 IE 浏览器下可能会增加额外的 HTTP  请求数。\nChrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示, 可通过加入  CSS\n属性 -webkit-text-size-adjust: none; 解决.\n超链接访问过后 hover 样式就不出现了  被点击访问过的超链接样式不在具有 hover  和\nactive 了解决方法是改变 CSS 属性的排列顺序:\nL-V-H-A :  a:link {} a:visited {} a:hover {} a:active {}")]),t._v(" "),s("h2",{attrs:{id:"列出-display-的值-说明他们的作用。position-的值-relative-和absolute-定位原点是"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列出-display-的值-说明他们的作用。position-的值-relative-和absolute-定位原点是"}},[t._v("#")]),t._v(" 列出 display 的值，说明他们的作用。position 的值,relative 和absolute 定位原点是？")]),t._v(" "),s("ol",[s("li",[t._v("block  象块类型元素一样显示。\nnone  缺省值。向行内元素类型一样显示。\ninline-block  象行内元素一样显示，但其内容象块类型元素一样显示。\nlist-item  象块类型元素一样显示，并添加样式列表标记。")]),t._v(" "),s("li",[t._v("position  的值\n*absolute\n生成绝对定位的元素，相对于 static  定位以外的第一个父元素进行定位。\n*fixed （老 IE  不支持）\n生成绝对定位的元素，相对于浏览器窗口进行定位。")])]),t._v(" "),s("ul",[s("li",[t._v("relative\n生成相对定位的元素，相对于其正常位置进行定位。")]),t._v(" "),s("li",[t._v("static  默认值。没有定位，元素出现在正常的流中\n*（忽略 top, bottom, left, right z-index  声明）。")]),t._v(" "),s("li",[t._v("inherit 规定从父元素继承 position  属性的值。")])]),t._v(" "),s("h2",{attrs:{id:"absolute-的-containing-block-计算方式跟正常流有什么不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#absolute-的-containing-block-计算方式跟正常流有什么不同"}},[t._v("#")]),t._v(" absolute 的 containing block  计算方式跟正常流有什么不同？")]),t._v(" "),s("p",[t._v("lock-level boxes\n一个 block-level element ('display' 属性值为 'block', 'list-item' 或是 ‘table’) 会生成\n一个 block-level box，这样的盒子会参与到 block-formatting context (一种布局的方\n式)  中。\nblock formatting context\n在这种布局方式下，盒子们自所在的 containing block  顶部起一个接一个垂直排列，水\n平方向上撑满整个宽度 (除非内部的盒子自己内部建立了新的 BFC)。\ncontaining block\n一般来说，盒子本身就为其子孙建立了 containing block，用来计算内部盒子的位置、大小，而对内部的盒子，具体\n采用哪个 containing block 来计算，需要分情况来讨论：\n若此元素为 inline 元素，则 containing block  为能够包含这个元素生成的第\n一个和最后一个 inline box 的 padding box (除 margin, border 外的区域)\n的最小矩形；\n否则则由这个祖先元素的 padding box  构成。\n根元素所在的 containing block 被称为 initial containing block，在我们常\n用的浏览器环境下，指的是原点与 canvas 重合，大小和 viewport  相同的矩\n形；\n对于 position 为 static 或 relative 的元素，其 containing block  为祖先元素\n中最近的 block container box 的 content box (除 margin, border,\npadding 外的区域)；\n对于 position:fixed 的元素，其 containing block 由 viewport  建立；\n对于 position:absolute 的元素，则是先找到其祖先元素中最近的 position  属\n性非 static  的元素，然后判断：\n如果都找不到，则为 initial containing block。")]),t._v(" "),s("h2",{attrs:{id:"对-web-标准以及-w3c-的理解与认识-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对-web-标准以及-w3c-的理解与认识-2"}},[t._v("#")]),t._v(" 对 WEB 标准以及 W3C 的理解与认识")]),t._v(" "),s("p",[t._v("标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外 链 css 和 js  脚本、结\n构行为表现的分离、文件下载与页面速度更快、内容能被更多的用户所访问、内容能被更\n广泛的设备所访问、更少的代码和组件，容易维  护、改版方便，不需要变动页面内容、提\n供打印版本而不需要复制内容、提高网站易用性；")]),t._v(" "),s("h2",{attrs:{id:"css-的基本语句构成是"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-的基本语句构成是"}},[t._v("#")]),t._v(" css 的基本语句构成是?")]),t._v(" "),s("p",[t._v("选择器{属性 1:值 1;属性 2:值 2;……}")]),t._v(" "),s("h2",{attrs:{id:"浏览器标准模式和怪异模式之间的区别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器标准模式和怪异模式之间的区别是什么"}},[t._v("#")]),t._v(" 浏览器标准模式和怪异模式之间的区别是什么?")]),t._v(" "),s("p",[t._v("盒子模型 渲染模式的不同\n使用 window.top.document.compatMode 可显示为什么模式")]),t._v(" "),s("h2",{attrs:{id:"css-中可以通过哪些属性定义-使得一个-dom-元素不显示在浏览器可"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-中可以通过哪些属性定义-使得一个-dom-元素不显示在浏览器可"}},[t._v("#")]),t._v(" CSS 中可以通过哪些属性定义，使得一个 DOM 元素不显示在浏览器可")]),t._v(" "),s("p",[t._v("视范围内？\n最基本的：\n设置 display 属性为 none，或者设置 visibility 属性为  hidden\n技巧性：\n设置宽高为 0，设置透明度为 0，设置 z-index 位置在-1000")]),t._v(" "),s("h2",{attrs:{id:"行内元素和块级元素的具体区别是什么-行内元素的padding-和margin-可设置吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行内元素和块级元素的具体区别是什么-行内元素的padding-和margin-可设置吗"}},[t._v("#")]),t._v(" 行内元素和块级元素的具体区别是什么？行内元素的padding 和margin  可设置吗？")]),t._v(" "),s("p",[t._v("块级元素(block)特性：\n总是独占一行，表现为另起一行开始，而且其后的元素也必须另起一行显示;\n宽度(width)、高度(height)、内边距(padding)和外边距(margin)都可控制;\n内联元素(inline)特性：\n和相邻的内联元素在同一行;\n宽 度 (width) 、 高 度 (height) 、 内 边 距 的  top/bottom(padding-top/padding-\nbottom)和外边距的    top/bottom(margin-top/margin-bottom)都不可改变（也就是\npadding 和 margin 的 left 和 right  是可以设置的），就是里面文字或图片的大小。\n那么问题来了，浏览器还有默认的天生 inline-block  元素（拥有内在尺寸，可设置高\n宽，但不会自动换行），有哪些？")]),t._v(" "),s("p",[t._v("答案："),s("code",[t._v("<input> 、<img> 、<button> 、<textarea> 、<label>")])]),t._v(" "),s("h2",{attrs:{id:"什么是外边距重叠-重叠的结果是什么-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是外边距重叠-重叠的结果是什么-2"}},[t._v("#")]),t._v(" 什么是外边距重叠？重叠的结果是什么？")]),t._v(" "),s("p",[t._v("答案：\n外边距重叠就是 margin-collapse。\n在 CSS  当中，相邻的两个盒子（可能是兄弟关系也可能是祖先关系）的外边距可以结\n合成一个单独的外边距。这种合并外边距的方式被称为折叠，并且因而所结合成的外边距\n称为折叠外边距。\n折叠结果遵循下列计算规则：\n两个相邻的外边距都是正数时，折叠结果是它们两者之间较大的值。\n两个相邻的外边距都是负数时，折叠结果是两者绝对值的较大值。\n两个外边距一正一负时，折叠结果是两者的相加的和。")]),t._v(" "),s("h2",{attrs:{id:"描述一个-reset-的-css-文件并如何使用它。知道-normalize-css-吗-你了解他们的不同之处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#描述一个-reset-的-css-文件并如何使用它。知道-normalize-css-吗-你了解他们的不同之处"}},[t._v("#")]),t._v(' 描述一个"reset"的 CSS 文件并如何使用它。知道 normalize.css  吗？你了解他们的不同之处？')]),t._v(" "),s("p",[t._v("重置样式非常多，凡是一个前端开发人员肯定有一个常用的重置 CSS  文件并知道如何\n使用它们。他们是盲目的在做还是知道为什么这么做呢？原因是不同的浏览器对一些元素\n有不同的默认样式，如果你不处理，在不同的浏览器下会存在必要的风险，或者更有戏剧\n性的性发生。\n你可能会用 Normalize  来代替你的重置样式文件。它没有重置所有的样式风格，但仅\n提供了一套合理的默认样式值。既能让众多浏览器达到一致和合理，但又不扰乱其他的东\n西（如粗体的标题）。\n在这一方面，无法做每一个复位重置。它也确实有些超过一个重置，它处理了你永远\n都不用考虑的怪癖，像 HTML 的 audio 元素不一致或 line-height  不一致。")]),t._v(" "),s("h2",{attrs:{id:"说-display-属性有哪些-可以做什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说-display-属性有哪些-可以做什么"}},[t._v("#")]),t._v(" 说 display 属性有哪些？可以做什么？")]),t._v(" "),s("p",[t._v("display:block  行内元素转换为块级元素\ndisplay:inline  块级元素转换为行内元素\ndisplay:inline-block  转为内联元素")]),t._v(" "),s("h2",{attrs:{id:"哪些-css-属性可以继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哪些-css-属性可以继承"}},[t._v("#")]),t._v(" 哪些 css 属性可以继承？")]),t._v(" "),s("p",[t._v("可继承： font-size font-family color, ul li dl dd dt;\n不可继承 ：border padding margin width height ;")]),t._v(" "),s("h2",{attrs:{id:"css-优先级算法如何计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-优先级算法如何计算"}},[t._v("#")]),t._v(" css 优先级算法如何计算？")]),t._v(" "),s("p",[t._v("!important >  id > class >  标签\n!important 比 内联优先级高\n*优先级就近原则，样式定义最近者为准;\n*以最后载入的样式为准;")]),t._v(" "),s("h2",{attrs:{id:"b-标签和-strong-标签-i-标签和-em-标签的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-标签和-strong-标签-i-标签和-em-标签的区别"}},[t._v("#")]),t._v(" b 标签和 strong 标签,i 标签和 em  标签的区别？")]),t._v(" "),s("p",[t._v("后者有语义，前者则无。")]),t._v(" "),s("h2",{attrs:{id:"有那些行内元素、有哪些块级元素、盒模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有那些行内元素、有哪些块级元素、盒模型"}},[t._v("#")]),t._v(" 有那些行内元素、有哪些块级元素、盒模型？")]),t._v(" "),s("p",[t._v("1.内联元素(inline element)\na – 锚点\nabbr – 缩写\nacronym – 首字\nb – 粗体(不推荐)\nbig – 大字体\nbr – 换行\nem – 强调\nfont – 字体设定(不推荐)\ni – 斜体\nimg – 图片\ninput – 输入框\nlabel – 表格标签\ns – 中划线(不推荐)\nselect – 项目选择\nsmall – 小字体文本\nspan – 常用内联容器，定义文本内区块\nstrike – 中划线\nstrong – 粗体强调\nsub – 下标\nsup – 上标\ntextarea – 多行文本输入框\ntt – 电传文本\nu – 下划线\nvar – 定义变量\n2、块级元素\naddress – 地址\nblockquote – 块引用\ncenter – 举中对齐块\ndir – 目录列表\ndiv – 常用块级容易，也是 css layout  的主要标签\ndl – 定义列表\nfieldset – form  控制组\nform – 交互表单\nh1 – 大标题\nh2 – 副标题\nh3 – 3  级标题\nh4 – 4  级标题\nh5 – 5  级标题\nh6 – 6  级标题\nhr – 水平分隔线\nisindex – input prompt\nmenu – 菜单列表\nnoframes – frames 可选内容，（对于不支持 frame  的浏览器显示此区块内容）\nnoscript – ）可选脚本内容（对于不支持 script  的浏览器显示此内容）\nol – 排序表单\np – 段落\npre – 格式化文本\ntable – 表格\nul – 非排序列表\n3.CSS  盒子模型包含四个部分组成：\n内容、填充（padding）、边框（border）、外边界（margin）。")]),t._v(" "),s("h2",{attrs:{id:"有哪些选择符-优先级的计算公式是什么-行内样式和-important哪个优先级高"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有哪些选择符-优先级的计算公式是什么-行内样式和-important哪个优先级高"}},[t._v("#")]),t._v(" 有哪些选择符，优先级的计算公式是什么？行内样式和！   important哪个优先级高？")]),t._v(" "),s("p",[t._v("#ID > .class > 标签选择符  !important  优先级高")]),t._v(" "),s("h2",{attrs:{id:"我想让行内元素跟上面的元素距离10px-加-margin-top-和padding-top-可以吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想让行内元素跟上面的元素距离10px-加-margin-top-和padding-top-可以吗"}},[t._v("#")]),t._v(" 我想让行内元素跟上面的元素距离10px ，加 margin-top  和padding-top 可以吗？")]),t._v(" "),s("p",[t._v("margin-top,padding-top  无效")]),t._v(" "),s("h2",{attrs:{id:"css-的盒模型由什么组成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-的盒模型由什么组成"}},[t._v("#")]),t._v(" CSS  的盒模型由什么组成？")]),t._v(" "),s("p",[t._v("内容，border ,margin，padding")]),t._v(" "),s("h2",{attrs:{id:"说说-display-属性有哪些-可以做什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说说-display-属性有哪些-可以做什么"}},[t._v("#")]),t._v(" 说说 display  属性有哪些？可以做什么？")]),t._v(" "),s("p",[t._v("display:block  行内元素转换为块级元素\ndisplay:inline  块级元素转换为行内元素\ndisplay:inline-block  转为内联元素")]),t._v(" "),s("h2",{attrs:{id:"哪些-css-属性可以继承-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哪些-css-属性可以继承-2"}},[t._v("#")]),t._v(" 哪些 css  属性可以继承？")]),t._v(" "),s("p",[t._v("可继承： font-size font-family color, ul li dl dd dt;\n不可继承 ：border padding margin width height ;")]),t._v(" "),s("h2",{attrs:{id:"css-优先级算法如何计算-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-优先级算法如何计算-2"}},[t._v("#")]),t._v(" css  优先级算法如何计算？")]),t._v(" "),s("p",[t._v("!important >  id > class >  标签\n!important 比 内联优先级高")]),t._v(" "),s("ul",[s("li",[t._v("优先级就近原则，样式定义最近者为准;")]),t._v(" "),s("li",[t._v("以最后载入的样式为准;")])]),t._v(" "),s("ClientOnly",[s("leave")],1)],1)}),[],!1,null,null,null);a.default=e.exports}}]);